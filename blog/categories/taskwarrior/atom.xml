<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: taskwarrior | pietrushnic's world]]></title>
  <link href="http://pietrushnic.github.io/blog/categories/taskwarrior/atom.xml" rel="self"/>
  <link href="http://pietrushnic.github.io/"/>
  <updated>2013-08-01T04:54:41+02:00</updated>
  <id>http://pietrushnic.github.io/</id>
  <author>
    <name><![CDATA[pietrushnic]]></name>
    <email><![CDATA[pierushnic@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Workflow imporovement with Open Source tools - part 1]]></title>
    <link href="http://pietrushnic.github.io/blog/2013/05/16/workflow-imporovement-with-open-source-tools/"/>
    <updated>2013-05-16T22:16:00+02:00</updated>
    <id>http://pietrushnic.github.io/blog/2013/05/16/workflow-imporovement-with-open-source-tools</id>
    <content type="html"><![CDATA[<h3>Introduction</h3>

<p>I want to start a series of articles to describe how I improve my workflow with
geeky Open Source applications. I will concentrate on terminal applications that
I try to use in my GTD process.</p>

<h3>Terminal</h3>

<h4>Solarized gnome-terminal</h4>

<p>If you already don&rsquo;t know what solarized color scheme is then please take a look
at <a href="http://ethanschoonover.com/solarized">this page</a>. To install solarized
colorscheme in gnome-terminal simply follow instruction from this <a href="https://github.com/sigurdga/gnome-terminal-colors-solarized">git repository</a>.</p>

<h3>Mutt again</h3>

<p>During last days I spent a lot of time to tweak my mutt configuration. Here I
will give you few hints about things that I learned.</p>

<h4>Solarized mutt</h4>

<p>To enable solarized colorscheme in mutt simply download one of scheme files from <a href="https://github.com/altercation/mutt-colors-solarized">github</a>. If you installed
dark scheme for your gnome-terminal then I suggest <code>mutt-colors-solarized-dark-16.muttrc</code>.
Copy this file for example to <code>$HOME/.mutt</code> and source it in muttrc file:
<code>
source $HOME/.mutt/mutt-colors-solarized-dark-16.muttrc
</code></p>

<h4>Width of From column</h4>

<p>Usually from field in today&rsquo;s emails is longer than 19 characters. If this
happens mutt by default will not display whole string. To change this behavior
you can manipulate <code>index_format</code> variable. I set mine to 30:

<code>
set index_format="%4C %Z %{%b %d} %-30.30L (%4l) %s"
</code>
</p>

<h4>Sidebar</h4>

<p>Finally I gave up sidebar for using latest code without annoying <code>tls_socket_read</code> error.
Switching between IMAP folders is not so bad, you can quickly display all
folders by <code>c&lt;Tab&gt;&lt;Tab&gt;</code> or simply <code>y</code></p>

<h4>Offlineimap</h4>

<p>This is probably best program to synchronize your emails with local storage. It
also has feature that allow synchronization between different IMAP servers but
I&rsquo;m not using it. Few things are crucial when using <code>offlineimap</code>:</p>

<ul>
<li>probably easiest way to keep passwords secret is using python hooks for gnome-keyring,
detailed description how to integrate it with <code>offlineimap</code> is
<a href="http://www.clasohm.com/blog/one-entry?entry_id=90957">here</a>. Debian name of
<code>gnome-python2-gnomekeyring</code> is different: <code>python-gnomekeyring</code>.</li>
<li>Use meaningful <code>localfolders</code> because you will use it in <code>mutt</code> configuration</li>
</ul>


<p>Typical configuration of <code>$HOME/.offlineimaprc</code>:
```
[mbnames]
enabled = yes
filename = ~/.mutt/muttrc.mailboxes
header = &ldquo;mailboxes &rdquo;
peritem = &ldquo;+%(accountname)s/%(foldername)s&rdquo;
sep = &ldquo; &rdquo;
footer = &ldquo;\n&rdquo;</p>

<p>[general]
metadata = ~/.offlineimap
maxsyncaccounts = 5
maxconnections = 2
accounts = account1, account2
status_backend = sqlite
pythonfile = ~/.mutt/offlineimap.py</p>

<p>[Account account1]
autorefresh = 3
localrepository = acc1_local
remoterepository = acc1_remote</p>

<p>[Repository acc1_local]
type = Maildir
localfolders = ~/.mail/account1</p>

<p>[Repository acc2_remote]
type = Gmail
remoteusereval = get_username(&ldquo;account1&rdquo;)
remotepasseval = get_password(&ldquo;account1&rdquo;)
sslcacertfile = /etc/ssl/certs/ca-certificates.crt</p>

<p>[Account account2]
autorefresh = 3
localrepository = acc2_local
remoterepository = acc2_remote</p>

<p>[Repository acc2_local]
type = Maildir
localfolders = ~/.mail/account2</p>

<p>[Repository acc2_remote]
type = Gmail
remoteusereval = get_username(&ldquo;account2&rdquo;)
remotepasseval = get_password(&ldquo;account2&rdquo;)
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
```</p>

<p>What this means by section:</p>

<ul>
<li><code>[mbnames]</code> &ndash; automatically create mailboxes folders according to your
configuration on IMAP server</li>
<li><code>[general]</code> &ndash; most important things here are self explanatory accounts
variable and <code>max{syncaccounts,connections}</code>, first said how many accounts
should be synchronized and second how many simultaneous connections should be
used</li>
<li><code>[Account *]</code> &ndash; contain sync refresh time in minutes (<code>autorefresh</code>) and link
to local and remote repository definitions (<code>localrepository</code> and
<code>remoterepository</code>)</li>
<li><code>[Repository *]</code> &ndash; for local folder and its type and for remote gnome-keyring
configuration</li>
</ul>


<h4>Multiple account configuration</h4>

<p>To simplify multiple accounts configuration I added two things:</p>

<ul>
<li>separated account files configuration &ndash; in my case placed in <code>$HOME/.mutt/accounts</code>
<code>
set postponed   = +account1@server.com/Drafts
set spoolfile   = +account1@server.com/INBOX
set record      = +account1@server.com/Sent
set from        = 'account1@server.com'
set realname    = 'My Name'
set smtp_url    = smtps://acc1@smtp.server.com:587
set smtp_pass   = $my_pass
set signature   = "~/.mutt/signature.example"
</code></li>
<li>folder hooks for particular account &ndash; it cause automatic loading of
configurations when folder was changed (in <code>$HOME/muttrc</code>):
<code>
folder-hook 'account1@server.com' 'source $HOME/.mutt/accounts/account1'
</code></li>
</ul>


<h4>Separate mailing list file</h4>

<p>I keep my mailing list configuration file separated and source it in my
<code>$HOME/.muttrc</code>. I&rsquo;m not mailing list advanced user, so right now I have manually
created IMAP folders and Gmail filters to move mails from mailing list to this
folders. On the mutt side I use <code>subscribe</code> command to indicate that particular
mail id is a mailing list.</p>

<h3>Personal informations</h3>

<p>Some informations in my configuration files shouldn&rsquo;t be available for all. I
mean my email account configuration, my todo list, passwords and things like
that. To store this informations I use additional private git repository and use
it as a submodule for my workspace configuration. I wrote post about keeping
configuration using git
<a href="/blog/2012/02/19/improve-productivity-by-tracking-work">here</a> and
<a href="/blog/2012/02/20/improve-productivity-by-tracking-work_20">here</a>.</p>

<h3>Taskwarrior and vit</h3>

<p>I really like <code>taskwarrior</code> as a GTD tool but I was tired of writing everything
every time I wanted to change sth. I found <code>vit</code>. Vit is a vi-like interface
to task list generated by <code>taskwarrior</code> it works really great. Mostly it is
written in perl and there is no official repository for its code base but latest
version is from April 2013. I use lot of <code>project:</code> and <code>+flag</code> to update my
TODO list. I prefer <code>long</code> filter.</p>

<h4>My taskwarrior projects and flags</h4>

<p>I have few ongoing projects like <code>blog</code>, <code>productivity</code> and <code>ideas</code>. In addition I use
few flags like <code>ideas</code>, <code>finish</code>, <code>enhancement</code>, <code>fix</code> or <code>bug</code>. So when I
connect project and flag I get few categories like:</p>

<ul>
<li><code>blog ideas</code> for new articles ideas</li>
<li><code>blog finish</code> for articles that should be finished ASAP</li>
<li><code>blog bug/fix</code> for articles that have to be changed for some reason</li>
<li><code>productivity bug/fix</code> for productivity tools configuration improvements</li>
<li><code>productivity ideas</code> for new improvements</li>
</ul>


<h3>Summary</h3>

<p>I think this is enough for first post from this series. Hope it was helpful. If
yes then please share, if no then comment what I should improve. Thanks for
reading.</p>
]]></content>
  </entry>
  
</feed>
