<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: productivty | pietrushnic's world]]></title>
  <link href="http://pietrushnic.github.io/blog/categories/productivty/atom.xml" rel="self"/>
  <link href="http://pietrushnic.github.io/"/>
  <updated>2013-07-28T08:55:56+02:00</updated>
  <id>http://pietrushnic.github.io/</id>
  <author>
    <name><![CDATA[pietrushnic]]></name>
    <email><![CDATA[pierushnic@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thunderbird to Mutt migration - tips & tricks]]></title>
    <link href="http://pietrushnic.github.io/blog/2013/05/15/thunderbird-to-mutt-migration/"/>
    <updated>2013-05-15T18:40:00+02:00</updated>
    <id>http://pietrushnic.github.io/blog/2013/05/15/thunderbird-to-mutt-migration</id>
    <content type="html"><![CDATA[<h3>Preface</h3>

<p>I migrate with my working environment to laptop. My workstation going older and
I don&rsquo;t have time to maintain few systems to keep it clean and in sync. I
probably have to improve my work flow but right now I have different problems.
Few weeks ago after changing environment to mobile and powerful laptop I also
changed OS to Ubuntu and mail client to Thunderbird. I have to admit that both
choices were mistake and I want to came back to Debian and Mutt. This post is
about throwing out Thunderbird and a logical continuation of Mutt tutorial (part
<a href="/blog/2012/05/13/mutt-tutorial-part-1-setup-imap-account">1</a>, <a href="/blog/2012/05/13/mutt-tutorial-part-2-secure-login">2</a>,
<a href="/blog/2012/05/13/mutt-tutorial-part-3-sidebar-urls-in-e">3</a> and <a href="/blog/2012/05/13/mutt-tutorial-part-4-html-mails-address">4</a>).</p>

<p>So what was wrong with Thunderbrid ?</p>

<ul>
<li>Not clear configuration settings &ndash; for example I tried to wrap word at 80th
character, default value was set to 72 but it seems not work anyway. I try to
use few googled hints but nothing works.</li>
<li>Setting up Thunderbird to work as a community developer tool was not so
obvious.</li>
<li>Junk messages was marked but default filter show everything so for some IMAP
boxes I get lot of spam and had hard time to find anything out there.</li>
<li>Conversation mode should be easily toggled.</li>
<li>GUI slow switching between different modes.</li>
<li>Lack of my editor of choice.</li>
</ul>


<p>If I decide to use GUI tool for some reason I require from it to be intuitive
and most of my options should be available at few clicks. Probably most of my
problems I could solve by giving enough effort to google it but if I have to
choose hard to configure MUA I will probably be in favor of terminal tool like
Mutt. So right now I&rsquo;m back with Mutt and determination to adjust Mutt to my
work flow.</p>

<h3>Git and undelete old configuration</h3>

<p>I won&rsquo;t go through whole Mutt tutorial once more time. I remember that there was
muttrc in my workspace git repository. So first goolge query returned what
needed I found <a href="http://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo">this</a> stackoverflow post.
I reverted muttrc and other related files deletion.</p>

<h3>Short informations</h3>

<ul>
<li>In Ubuntu there is no <code>gpg</code> package, to get encryption you can use <code>gpgsm</code>.</li>
<li>If your e-mail account provider require user name with <code>@</code> (at sign), then you
can pass it in mutt using below pattern:
<code>
set folder = imaps://[login]@[imap_server]/ # i.e. imaps://foo@bar.pl@imap.srv.pl/
</code></li>
<li>You can debug Mutt using <code>-d 5</code> parameter, this option creates
<code>$HOME/.muttdebug0</code> file with verbose output, debug option can be changed in
range 1-5.</li>
<li>Use latest-greatest version compiled from source instead version provided
by distribution repository. It can help you get rid of problems like <code>tls_socket_read (Decryption has failed.)</code>.</li>
<li>Some accounts will not work with authenticating method presented in my
previous post about gpg (<a href="/blog/2012/05/13/mutt-tutorial-part-2-secure-login">mutt tutorial part 2</a>).
To workaround this you can use different format of folder variable:
<code>
set folder = imaps://[login]:[passwd_var]@[imap_server]/ # i.e. imaps://foo:$my_bar_passwd@bar.pl@imap.srv.pl/
</code></li>
</ul>


<h3>Compile Mutt from source</h3>

<p>If you looking for latest Mutt version consider compiling mutt by yourself.
First, download sources:
<code>
hg clone http://dev.mutt.org/hg/mutt#HEAD
hg update -C HEAD
hg pull -u
</code></p>

<p>There are lot of options to prepare Mutt compilation, but right now I can
suggest this parameters:
<code>
cd mutt
./prepare --with-ssl --enable-debug --enable-imap --enable-smtp --enable-pop \
-enable-hcache --with-gss --with-gnutls --with-sasl
make &amp;&amp; sudo make install
</code></p>

<p>If make will complain about <code>gssapi/gssapi.h: No such file or directory</code> then
you need to install <code>libkrb5-dev</code>:
<code>
sudo apt-get install libkrb5-dev
</code></p>

<h3>Summary</h3>

<p>That&rsquo;s all in this post but I&rsquo;m sure that there will be next in this topic. I
hope to improve my whole workflow and write few posts about improving
productivity using open source tools.</p>
]]></content>
  </entry>
  
</feed>
